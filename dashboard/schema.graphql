# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type AuthMutation {
    login(input: AuthLoginInput!): Boolean
    logout: Boolean
}

type AuthQuery {
    profile: User
}

type Brand {
    description: String
    id: ID!
    image: String!
    title: String!
}

type BrandMutation {
    delete(input: BrandDeleteInput!): Boolean
    upsert(input: BrandUpsertInput!): Brand
}

type BrandQuery {
    list: [Brand!]!
}

type Category {
    description: String
    id: ID!
    image: String!
    slug: String!
    sort: Int!
    title: String!
}

type CategoryMutation {
    delete(input: CategoryDeleteInput!): Boolean
    upsert(input: CategoryUpsertInput!): Category
}

type CategoryQuery {
    list: [Category!]!
}

type File {
    uri: String!
}

type FileMutation {
    upload(file: Upload!): File
}

type Mutation {
    auth: AuthMutation!
    brand: BrandMutation!
    category: CategoryMutation!
    file: FileMutation!
    shop: ShopMutation!
}

type Query {
    auth: AuthQuery!
    brand: BrandQuery!
    category: CategoryQuery!
    shop: ShopQuery!
}

type Shop {
    description: String
    id: ID!
    image: String!
    link: String
    title: String!
}

type ShopMutation {
    delete(input: ShopDeleteInput!): Boolean
    upsert(input: ShopUpsertInput!): Shop
}

type ShopQuery {
    list: [Shop!]!
}

type User {
    email: String!
    roles: [UserRole]!
    username: String
}

enum UserRole {
    ADMIN
    USER
}

input AuthLoginInput {
    password: String!
    username: String!
}

input BrandDeleteInput {
    id: ID!
}

input BrandUpsertInput {
    description: String
    id: ID
    image: String!
    title: String!
}

input CategoryDeleteInput {
    id: ID!
}

input CategoryUpsertInput {
    description: String
    id: ID
    image: String!
    slug: String!
    sort: Int = 0
    title: String!
}

input ShopDeleteInput {
    id: ID!
}

input ShopUpsertInput {
    description: String
    id: ID
    image: String!
    link: String
    title: String!
}


scalar Upload